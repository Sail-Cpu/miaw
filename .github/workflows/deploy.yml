name: Deploy ðŸš€

on:
  push:
    branches:
      - master
  pull_request: 
    branches:
      - master

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # Step 4: Create .env file from secrets (if needed)
      - name: Create .env file from secrets
        run: |
          echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}" >> .env
          echo "POSTGRES_USER=${{ secrets.POSTGRES_USER }}" >> .env
          echo "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_DB=${{ secrets.POSTGRES_DB }}" >> .env
          echo "VITE_APP_API_URL=${{ secrets.VITE_APP_API_URL }}" >> ./client/.env.production
          echo "VITE_APP_API_KEY=${{ secrets.VITE_APP_API_KEY }}" >> ./client/.env.production
          echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> ./server/.env.production
          echo "API_SECRET_KEY=${{ secrets.API_SECRET_KEY }}" >> ./server/.env.production
          echo "API_URL=${{ secrets.API_URL }}" >> ./server/.env.production
          echo "PORT=${{ secrets.PORT }}" >> ./server/.env.production
          echo "API_KEY=${{ secrets.API_KEY }}" >> ./server/.env.production

      - name: Build and Push Docker Compose services
        run: |
          docker compose -f docker-compose.prod.yml build
          docker compose -f docker-compose.prod.yml push
  deploy:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - name: Deploy using SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin
            
            export "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}"
            export "POSTGRES_USER=${{ secrets.POSTGRES_USER }}"
            export "POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}"
            export "POSTGRES_DB=${{ secrets.POSTGRES_DB }}"
            
            cd /var/www/miaw
            docker compose -f docker-compose.prod.yml pull 
            docker compose -f docker-compose.prod.yml up -d --remove-orphans 
            docker image prune -f
